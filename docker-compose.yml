services:
  redis:
    image: redis:7.2-alpine
    container_name: agentic_forge_redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6378
    ports:
      - "${REDIS_HOST_PORT:-6378}:6378"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "-p", "6378", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - agentic_network

  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic_forge_server
    ports:
      - "${HOST_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/usr/src/app/workspace
    depends_on:
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6378
      - DOCKER=true
      - HOST_PROJECT_PATH=/usr/src/app
      # =================================================================
      # CORRECTION DÉFINITIVE : Force le serveur à écouter sur 0.0.0.0
      - HOST=0.0.0.0
      # =================================================================
    restart: unless-stopped
    command: sh -c "pnpm install && pnpm run start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - agentic_network

  web:
    image: agentic_forge_server:latest # Utilise l'image construite par le Dockerfile principal
    container_name: agentic_forge_web
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      - server
    env_file: .env
    environment:
      - NODE_ENV=production
      - WEB_PORT=3000
    restart: unless-stopped
    command: sh -c "cd /usr/src/app/ui-dist && pnpm run start:web" # Sert les fichiers compilés du frontend
    networks:
      - agentic_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic_forge_worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/usr/src/app/workspace
    depends_on:
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6378
      - DOCKER=true
      - HOST_PROJECT_PATH=/usr/src/app
    restart: unless-stopped
    command: sh -c "pnpm install && pnpm run start:worker"
    networks:
      - agentic_network

volumes:
  redis_data:
    driver: local

networks:
  agentic_network:
    driver: bridge
    name: agentic_forge_network