services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic_prometheus_server
    ports:
      - "${HOST_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/usr/src/app/workspace
    depends_on:
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
    restart: unless-stopped
    command: pnpm run start

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic_prometheus_worker
    command: pnpm run start:worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: agentic_prometheus_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
